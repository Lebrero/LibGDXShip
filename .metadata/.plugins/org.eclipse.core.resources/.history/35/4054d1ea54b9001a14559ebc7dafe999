package com.libgdx.lebmorda.screens;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.ScreenAdapter;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.InputListener;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.ui.Label;
import com.badlogic.gdx.scenes.scene2d.ui.TextButton;
import com.badlogic.gdx.utils.Align;
import com.badlogic.gdx.utils.viewport.FitViewport;
import com.libgdx.lebmorda.Games.GameCameraInputListener;
import com.libgdx.lebmorda.Games.GameManager;
import com.libgdx.lebmorda.Games.GameScene2D_UI_1;
import com.libgdx.lebmorda.Games.GameScene2D_UI_2;
import com.libgdx.lebmorda.IA.GameBasicFollowIA;
import com.libgdx.lebmorda.IA.GameBasicFollowIA2;
import com.libgdx.lebmorda.IA.GameBasicFollowIA3;
import com.libgdx.lebmorda.IA.GameBasicFollowIA4;
import com.libgdx.lebmorda.IA.GameBasicFollowIA5;
import com.libgdx.lebmorda.IA.GameBasicFollowIA6;
import com.libgdx.lebmorda.IA.GameBasicFollowIA7;
import com.libgdx.lebmorda.IA.GameBasicFollowIA8;
import com.libgdx.lebmorda.IA.GameBasicIA;
import com.libgdx.lebmorda.main.BasicGame;

public class TitleScreen extends ScreenAdapter {

	BasicGame game;
	private FitViewport viewport;
	private Stage stage;

	public TitleScreen(BasicGame game) {
		this.game = game;
	}

	@Override
	public void show() {

		viewport = new FitViewport(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
		stage = new Stage(viewport, game.batch);

		Label title = new Label("Title Screen", game.gameSkin, "big-black");
		title.setAlignment(Align.center);
		title.setY(Gdx.graphics.getHeight() * 2 / 3);
		title.setWidth(Gdx.graphics.getWidth());
		stage.addActor(title);

		TextButton playButton = new TextButton("Play!", game.gameSkin);
		playButton.setWidth(Gdx.graphics.getWidth() / 2);
		playButton.setPosition(Gdx.graphics.getWidth() / 2 - playButton.getWidth() / 2,Gdx.graphics.getHeight() / 2 - playButton.getHeight() / 2);
		playButton.addListener(new InputListener() {
			@Override
			public void touchUp(InputEvent event, float x, float y, int pointer, int button) {
				game.setScreen(new GameManager(game));
			}

			@Override
			public boolean touchDown(InputEvent event, float x, float y, int pointer, int button) {
				return true;
			}
		});
		stage.addActor(playButton);

		Gdx.input.setInputProcessor(stage);
	}

	@Override
	public void render(float delta) {
		Gdx.gl.glClearColor(1, 1, 1, 1);
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		stage.act();
		stage.draw();
	}

	@Override
	public void dispose() {
		stage.dispose();
	}
}
